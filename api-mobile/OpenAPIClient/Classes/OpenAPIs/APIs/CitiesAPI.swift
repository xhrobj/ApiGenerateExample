//
// CitiesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class CitiesAPI {
    /**
     Finds cities by lattlong
     
     - parameter lattlong: (query) lattlong (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func findCitiesByLattlong(lattlong: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [City]?,_ error: Error?) -> Void)) {
        findCitiesByLattlongWithRequestBuilder(lattlong: lattlong).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Finds cities by lattlong
     - GET /search/
     - parameter lattlong: (query) lattlong (optional)
     - returns: RequestBuilder<[City]> 
     */
    open class func findCitiesByLattlongWithRequestBuilder(lattlong: String? = nil) -> RequestBuilder<[City]> {
        let path = "/search/"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "lattlong": lattlong?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<[City]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
